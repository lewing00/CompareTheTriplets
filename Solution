import java.io.*;
import java.math.*;
import java.security.*;
import java.text.*;
import java.util.*;
import java.util.concurrent.*;
import java.util.function.*;
import java.util.regex.*;
import java.util.stream.*;
import static java.util.stream.Collectors.joining;
import static java.util.stream.Collectors.toList;

/**
Created by: LeeAnna Ewing
January 5th, 2020
*/

public class Solution {

    // Complete the compareTriplets function below.
    static List<Integer> compareTriplets(List<Integer> a, List<Integer> b) 
    {
      int aliceTotal = 0, bobTotal = 0; //Initialize accumulators for total scores
      
      //for loop to compare score and award points using ternary operator
      for (int i = 0; i < 3; i++) //List can contain only 3 integers  
      {
         int aliceScore = a.get(i);
         int bobScore = b.get(i);
         if (aliceScore != bobScore)
         {
            int scoreCheck = aliceScore > bobScore ? aliceTotal++ : bobTotal++;
         }
      }//for loop close
      
      //create array list for results of score totals
      List<Integer> scoreResult = new ArrayList<>();
      scoreResult.add(aliceTotal);
      scoreResult.add(bobTotal);
      return scoreResult;
    }//function close (compareTriplets)

    public static void main(String[] args) throws IOException {
        BufferedReader bufferedReader = new BufferedReader(new InputStreamReader(System.in));
        BufferedWriter bufferedWriter = new BufferedWriter(new FileWriter(System.getenv("OUTPUT_PATH")));

        List<Integer> a = Stream.of(bufferedReader.readLine().replaceAll("\\s+$", "").split(" "))
            .map(Integer::parseInt)
            .collect(toList());

        List<Integer> b = Stream.of(bufferedReader.readLine().replaceAll("\\s+$", "").split(" "))
            .map(Integer::parseInt)
            .collect(toList());

        List<Integer> result = compareTriplets(a, b);

        bufferedWriter.write(
            result.stream()
                .map(Object::toString)
                .collect(joining(" "))
            + "\n"
        );

        bufferedReader.close();
        bufferedWriter.close();
    }
}
